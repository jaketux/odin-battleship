import{gameBoardModule}from"./gameboard.js";import{createDisplay,createPreDisplay,updateTurnText}from"./index.js";const player=gameBoardModule(),computer=gameBoardModule(),gameController=function(){const e=["Player","Computer"];let r=e[0],t=0;const n=function(){player.checkSunk()?(t=e[1],updateTurnText(e[1])):computer.checkSunk()&&(t=e[0],console.log(e[0]+" is the winner!"),updateTurnText(e[0]))},o=function(){r=r===e[0]?e[1]:e[0]},a=function(){return r===e[0]?e[0]:e[1]},c=function(){player.getGameBoard(),computer.getGameBoard()};return c(),{players:e,newRound:c,getActivePlayer:a,checkWinner:n,makeComputerMove:function(){let e=Math.floor(10*Math.random()),r=Math.floor(10*Math.random());player.receiveAttack(e,r),n(),o(),c()},returnWinner:function(){return t},resetWinner:function(){console.log("Resetting winner..."),t=0,r=e[0],console.log("Winner reset to:",t),console.log("Active player reset to:",r)},switchPlayerTurn:o,getActivePlayer:a,startNewGame:function(){player.resetBoard(),computer.resetBoard(),game.resetWinner(),console.log(player.getGameBoard()),console.log(computer.getGameBoard()),updateTurnText()}}};let game=gameController();const playRound=function(e,r){if(0!==game.returnWinner())return;let t=null;"Player"===game.getActivePlayer()?(console.log(game.returnWinner()),t=computer.receiveAttack(e,r),"A ship has been hit!"!==t&&"Attack missed!"!==t||(game.checkWinner(),game.switchPlayerTurn(),game.newRound(),createDisplay("player"),createDisplay("opponent"),game.makeComputerMove())):"Computer"===game.getActivePlayer()&&(game.checkWinner(),game.switchPlayerTurn(),game.newRound(),createDisplay("player"),createDisplay("opponent"))};export{player,computer,game,playRound};